// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backendAPI;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241029211748_CreateCartPaymentTable")]
    partial class CreateCartPaymentTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("backend.src.Entities.UserDbo", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Firstname")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Firstname");

                    b.Property<string>("Lastname")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Lastname");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password ");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<string>("Username")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("username ");

                    b.Property<string>("address")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Uaddress");

                    b.Property<string>("email")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("phone")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone_number");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("backend.src.Entity.CartDbo", b =>
                {
                    b.Property<int>("Cart_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cart_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cart_id"));

                    b.Property<int?>("Product_id")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<decimal>("Total_price")
                        .HasColumnType("DECIMAL(10,2)")
                        .HasColumnName("total_price");

                    b.Property<int?>("User_id")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Cart_id");

                    b.ToTable("cart");
                });

            modelBuilder.Entity("backend.src.Entity.CartPaymentDbo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuyId")
                        .HasColumnType("int");

                    b.Property<int>("CartId")
                        .HasColumnType("int")
                        .HasColumnName("cart_id");

                    b.Property<int>("PaymentBuy_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaymentBuy_id");

                    b.ToTable("CartPayment");
                });

            modelBuilder.Entity("backend.src.Entity.CategorieDbo", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Categoryname")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("category_name ");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("backend.src.Entity.LocationDbo", b =>
                {
                    b.Property<int>("Location_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("location_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Location_id"));

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("address ");

                    b.Property<int?>("User_id")
                        .HasColumnType("int")
                        .HasColumnName("user_id ");

                    b.HasKey("Location_id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("backend.src.Entity.PaymentDbo", b =>
                {
                    b.Property<int>("Buy_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("buy_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Buy_id"));

                    b.Property<int?>("Cart_id")
                        .HasColumnType("int")
                        .HasColumnName("cart_id");

                    b.Property<int?>("Location_id")
                        .HasColumnType("int")
                        .HasColumnName("location_id");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status");

                    b.Property<decimal>("Total_price")
                        .HasColumnType("DECIMAL(10,2)")
                        .HasColumnName("total_price");

                    b.Property<int?>("User_id")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<int?>("shipping_id")
                        .HasColumnType("int")
                        .HasColumnName("shipping_id");

                    b.HasKey("Buy_id");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("backend.src.Entity.ProductDbo", b =>
                {
                    b.Property<int>("Productid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Productid"));

                    b.Property<int?>("Categoryid")
                        .HasColumnType("int")
                        .HasColumnName("category_id ");

                    b.Property<DateTime?>("Created_at")
                        .HasColumnType("DATETIME")
                        .HasColumnName("created_at");

                    b.Property<decimal>("Price")
                        .HasColumnType("DECIMAL(10,2)")
                        .HasColumnName("price ");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description ");

                    b.Property<string>("Product_img")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("product_img");

                    b.Property<string>("Productname")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("product_name ");

                    b.Property<int>("Sellerid")
                        .HasColumnType("int")
                        .HasColumnName("seller_id");

                    b.Property<int?>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("stock ");

                    b.HasKey("Productid");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("backend.src.Entity.RoleDbo", b =>
                {
                    b.Property<int>("Role_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Role_id"));

                    b.Property<string>("Rolename")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("rolename");

                    b.HasKey("Role_id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("backend.src.Entity.SendDbo", b =>
                {
                    b.Property<int>("Send_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("send_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Send_id"));

                    b.Property<int?>("Buy_id")
                        .HasColumnType("int")
                        .HasColumnName("buy_id");

                    b.Property<string>("Send_status")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("send_status");

                    b.Property<string>("TrackNum")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TrackNum");

                    b.Property<int?>("User_id")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Send_id");

                    b.ToTable("Send");
                });

            modelBuilder.Entity("backend.src.Entity.ShippingDbo", b =>
                {
                    b.Property<int>("Shipping_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("shipping_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Shipping_id"));

                    b.Property<string>("Shipping_name")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("shipping_name");

                    b.HasKey("Shipping_id");

                    b.ToTable("Shipping");
                });

            modelBuilder.Entity("backend.src.Entity.CartPaymentDbo", b =>
                {
                    b.HasOne("backend.src.Entity.PaymentDbo", "Payment")
                        .WithMany("CartPayments")
                        .HasForeignKey("PaymentBuy_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("backend.src.Entity.PaymentDbo", b =>
                {
                    b.Navigation("CartPayments");
                });
#pragma warning restore 612, 618
        }
    }
}
